spring:
  main:
    banner-mode: off
  kafka:
    #template:
      #default-topic: library-events
    listener:
      ack-mode: manual_immediate
      concurrency: 3
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: mongodb-ingest-group-20250310
      auto-offset-reset: latest
      enable-auto-commit: false
      isolation-level: read_committed
      properties:
        fetch.max.bytes: 5242880
        spring.deserializer.value.delegate.class: com.skaria.kafka.mongodb.springboot.examples.serde.SomeListDeserializer
        spring.json.trusted.packages: com.skaria.model.inbound.SomeList
        retries:
          max: 3
          initialInterval: 1000
          interval: 1000
          backoffMultiplier: 2
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.skaria.kafka.mongodb.springboot.examples.serde.SomeListSerializer
      acks: all
      retries: 5
      properties:
        enable.idempotence: true
        linger.ms: 100
        request.timeout.ms: 5000
        send.wait.timeout.ms: 2000
        delivery.timeout.ms: 7000
        max.request.size: '3145728'

    topic:
      source-topic: somelist-topic

  data:
    mongodb:
      uri: "mongodb://mongodb-replica-set-svc.mongodb.svc.cluster.local/admin?replicaSet=mongodb-replica-set&ssl=true"
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      database: somelist

mongodb-config:
  mongodb-ssl-keystore: "${JKS_PATH}"
  mongodb-ssl-keystore-password: "${JKS_PASSWORD}"
  mongodb-ssl-truststore: "${JKS_PATH}"
  mongodb-ssl-truststore-password: "${JKS_PASSWORD}"

logging:
  level:
    root: info
    com.skaria: info
    org.springframework.boot: info
    org.springframework.kafka: info
    org.springframework.data: info

